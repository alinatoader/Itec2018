{"version":3,"sources":["webpack:///./src/app/user/quiz.component.html","webpack:///./src/app/user/quiz.component.ts","webpack:///./src/app/user/quiz.service.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/user.routing-module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\" style=\\\"background:white\\\" *ngIf=\\\"!errorMessage; else errorTemplate\\\">\\r\\n    <div class=\\\"col-md-12\\\" *ngFor=\\\"let question of questions\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h3 class=\\\"card-title\\\">{{question.text}}  - {{question.score}}</h3>\\r\\n                <h6 class=\\\"card-subtitle\\\">A typeahead example that gets values from a static string</h6>\\r\\n                <div *ngFor=\\\"let answer of question.answersList\\\">\\r\\n                    <span *ngIf=\\\"answer.checked; else uncheckedAnswer\\\"><button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n                            (click)=\\\"toggleChecked(question.id, answer.id)\\\"></button>\\r\\n                        {{answer.value}}</span>\\r\\n                    <ng-template #uncheckedAnswer>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"toggleChecked(question.id,answer.id)\\\"></button>\\r\\n                        {{answer.value}}\\r\\n                    </ng-template>\\r\\n                    {{answer.correct}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card\\\">\\r\\n            <img [src]=\\\"question.image\\\" alt=\\\"QuestionImage\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info btn-lg\\\" (click)=\\\"submitQuiz()\\\">Submit Quiz</button>\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #errorTemplate>\\r\\n    <div class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\r\\n</ng-template>\"","import { Component, OnInit, AfterViewInit } from \"@angular/core\";\r\nimport { QuizService } from \"./quiz.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { UserService } from \"../shared/services/user.service\";\r\n\r\n@Component({\r\n    templateUrl: 'quiz.component.html'\r\n})\r\nexport class QuizComponent implements OnInit, AfterViewInit {\r\n    quizId: number;\r\n    questions: any;\r\n    email: string;\r\n    errorMessage: string;\r\n\r\n    constructor(private quizService: QuizService, private route: ActivatedRoute,\r\n        private userService: UserService, private router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n        this.quizId = Number(this.route.snapshot.paramMap.get('id'));\r\n        this.email = this.route.snapshot.paramMap.get('email');\r\n        const loggedUser = this.userService.getUserFromLocalStorage();\r\n        if (loggedUser.email !== this.email) {\r\n            this.errorMessage = 'You are not allowed to enter this page!';\r\n            console.log(this.errorMessage);\r\n            this.router.navigateByUrl('/404');\r\n        }\r\n        this.getQuizCompleted();\r\n    }\r\n\r\n    getQuizCompleted() {\r\n        this.quizService.getQuizCompleted(this.email, this.quizId)\r\n            .subscribe(response => {\r\n                if (response) {\r\n                    this.errorMessage = 'You have already completed this quiz!';\r\n                    console.log(this.errorMessage);\r\n                    this.router.navigateByUrl('/404');\r\n                } else {\r\n                    this.errorMessage = undefined;\r\n                    this.getQuestions();\r\n                }\r\n            })\r\n    }\r\n\r\n    getQuestions() {\r\n        this.quizService.getQuestions(this.quizId)\r\n            .subscribe(response => {\r\n                console.log(response);\r\n                this.questions = response;\r\n                for (let i = 0; i < this.questions.length; i++) {\r\n                    for (let j = 0; j < this.questions[i].answersList.length; j++) {\r\n                        this.questions[i].answersList[j].checked = false;\r\n                    }\r\n                }\r\n                console.log(this.questions);\r\n            }, error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    toggleChecked(questionId: number, answerId: number) {\r\n        for (let i = 0; i < this.questions.length; i++) {\r\n            if (this.questions[i].id == questionId) {\r\n                for (let j = 0; j < this.questions[i].answersList.length; j++) {\r\n                    if (this.questions[i].answersList[j].id == answerId) {\r\n                        let a = this.questions[i].answersList[j];\r\n                        a.checked = a.checked ? false : true;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    submitQuiz() {\r\n        let score = 0;\r\n        let responseModel = {\r\n            quizId: this.quizId,\r\n            emailUser: this.email,\r\n            score: 0,\r\n            answerModels: []\r\n        };\r\n        for (let i = 0; i < this.questions.length; i++) {\r\n            const q = this.questions[i];\r\n            let correct = true;\r\n            for (let j = 0; j < q.answersList.length; j++) {\r\n                let a = q.answersList[j];\r\n                if (a.correct !== a.checked) {\r\n                    correct = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (correct) { score = score + q.score; }\r\n            responseModel.answerModels.push({ questionId: q.id, isCorrect: correct });\r\n        }\r\n        responseModel.score = score;\r\n        console.log(responseModel);\r\n        this.quizService.postResult(responseModel)\r\n            .subscribe(_ => {\r\n                console.log('success');\r\n                this.getQuizCompleted();\r\n            }, error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        $(function () {\r\n            $(\".preloader\").fadeOut();\r\n        });\r\n        $(function () {\r\n            (<any>$('[data-toggle=\"tooltip\"]')).tooltip()\r\n        });\r\n        $('#to-recover').on(\"click\", function () {\r\n            $(\"#loginform\").slideUp();\r\n            $(\"#recoverform\").fadeIn();\r\n        });\r\n    }\r\n}","import { OnInit, Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class QuizService {\r\n    apiUrl = 'https://apiitec2018tm.herokuapp.com';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getQuestions(quizId: number) {\r\n        return this.http.get(this.apiUrl + '/question/test/' + quizId);\r\n    }\r\n\r\n    postResult(result:any){\r\n        return this.http.post(this.apiUrl + '/result', result);\r\n    }\r\n\r\n    getQuizCompleted(email:string, quizId: number){\r\n        return this.http.get(this.apiUrl + '/result/' + email + '/' + quizId);\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UserRoutingModule } from './user.routing-module';\r\nimport { QuizComponent } from './quiz.component';\r\nimport { AdminModule } from '../admin/admin.module';\r\nimport { NavigationComponent } from '../shared/header-navigation/navigation.component';\r\nimport { SidebarComponent } from '../shared/sidebar/sidebar.component';\r\nimport { BreadcrumbComponent } from '../shared/breadcrumb/breadcrumb.component';\r\nimport { SIDEBAR_TOGGLE_DIRECTIVES } from '../shared/sidebar.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        UserRoutingModule,\r\n        AdminModule,\r\n\r\n    ],\r\n    declarations: [\r\n        QuizComponent,\r\n        \r\n    ],\r\n\r\n})\r\nexport class UserModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { QuizComponent } from './quiz.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'quiz/:id/:email',\r\n        component: QuizComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n"],"sourceRoot":""}