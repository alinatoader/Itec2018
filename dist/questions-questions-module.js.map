{"version":3,"sources":["webpack:///./src/app/admin/questions/questions-create.component.html","webpack:///./src/app/admin/questions/questions-create.component.ts","webpack:///./src/app/admin/questions/questions-display.component.html","webpack:///./src/app/admin/questions/questions-display.component.ts","webpack:///./src/app/admin/questions/questions-routing.module.ts","webpack:///./src/app/admin/questions/questions.module.ts","webpack:///./src/app/admin/questions/questions.service.ts"],"names":[],"mappings":"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","file":"questions-questions-module.js","sourcesContent":["module.exports = \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h3 class=\\\"card-title\\\">\\r\\n            Create new question\\r\\n        </h3>\\r\\n        <form class=\\\"form-horizontal form-material\\\" id=\\\"questionCreateForm\\\" (submit)=\\\"saveQuestion()\\\" [formGroup]=\\\"questionCreateForm\\\">\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"category\\\" title=\\\"Category\\\">\\r\\n                <option value=\\\"\\\" disabled selected>Category</option>\\r\\n                <option>SCIENCE</option>\\r\\n                <option>FOOTBALL</option>\\r\\n                <option>HISTORY </option>\\r\\n                <option>MATH</option>\\r\\n            </select>\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"difficulty\\\" title=\\\"Difficulty\\\">\\r\\n                <option value=\\\"\\\" disabled selected>Difficulty</option>\\r\\n                <option>BEGINNER</option>\\r\\n                <option>EASY</option>\\r\\n                <option>MEDIUM</option>\\r\\n                <option>HARD</option>\\r\\n                <option>LEGEND</option>\\r\\n            </select>\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Text\\\" formControlName=\\\"text\\\" title=\\\"Text\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Image\\\" formControlName=\\\"image\\\" title=\\\"Image\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Time\\\" formControlName=\\\"time\\\" title=\\\"Time\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Score\\\" formControlName=\\\"score\\\" title=\\\"Score\\\">\\r\\n            <hr />\\r\\n            <fieldset formArrayName=\\\"answersList\\\">\\r\\n                <h4>Answers: </h4>\\r\\n                <div class=\\\"form-group row\\\" *ngFor=\\\"let answer of questionCreateForm.get('answersList').controls; let i=index\\\"\\r\\n                    [formGroup]=\\\"answer\\\">\\r\\n                    <div class=\\\"col-md-9\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"value\\\" placeholder=\\\"Text\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                        <select formControlName=\\\"correct\\\" placeholder=\\\"Is Correct\\\" class=\\\"form-control\\\">\\r\\n                            <option>true</option>\\r\\n                            <option>false</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-1 py-1\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"questionCreateForm.get('answersList').removeAt(i)\\\">-</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-2 col-sm-offset-10\\\">\\r\\n                    <div class=\\\"form-group row\\\" >\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"addNewAnswer()\\\">+</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"text-center m-t-20\\\">\\r\\n                <button type=\\\"submit\\\" [disabled]=\\\"questionCreateForm.invalid\\\" class=\\\"btn btn-info btn-md btn-block text-uppercase waves-effect waves-light\\\">\\r\\n                    Save</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, EventEmitter, Output, Input } from \"@angular/core\";\r\nimport { FormGroup, FormControl, FormArray } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { QuestionsService } from \"./questions.service\";\r\n\r\n@Component({\r\n    templateUrl: 'questions-create.component.html'\r\n})\r\nexport class QuestionsCreateComponent implements OnInit {\r\n    id: number;\r\n    question: any;\r\n    questionCreateForm: FormGroup;\r\n\r\n    constructor(private questionsService: QuestionsService, private router: Router,\r\n        private route: ActivatedRoute) { }\r\n\r\n    ngOnInit(): void {\r\n        this.questionCreateForm = new FormGroup({\r\n            id: new FormControl(''),\r\n            quizId: new FormControl(''),\r\n            answersList: new FormArray([]),\r\n            text: new FormControl(''),\r\n            image: new FormControl(''),\r\n            time: new FormControl(''),\r\n            difficulty: new FormControl(''),\r\n            score: new FormControl(''),\r\n            category: new FormControl('')\r\n        });\r\n        this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n        if (this.id) {\r\n            this.getQuestionById(this.id);\r\n        }\r\n    }\r\n\r\n    addNewAnswer() {\r\n        (this.questionCreateForm.get('answersList') as FormArray).push(new FormGroup({\r\n            value: new FormControl(''),\r\n            correct: new FormControl(false)\r\n        }));\r\n    }\r\n\r\n    addQuestion() {\r\n        console.log(this.questionCreateForm.value);\r\n        this.questionsService.create(this.questionCreateForm.value)\r\n            .subscribe(response => {\r\n                console.log(response);\r\n                this.router.navigateByUrl('/admin/questions');\r\n            }, error => {\r\n                console.log(error);\r\n            }\r\n            );\r\n    }\r\n\r\n    saveQuestion() {\r\n        if (this.id) {\r\n            this.updateQuestion();\r\n        } else {\r\n            this.addQuestion();\r\n        }\r\n    }\r\n\r\n    updateQuestion() {\r\n        this.questionsService.update(this.id, this.questionCreateForm.value)\r\n            .subscribe(response => {\r\n                this.router.navigateByUrl('/admin/questions');\r\n            }, error => {\r\n                console.log(error);\r\n            }\r\n            );\r\n    }\r\n\r\n    getQuestionById(id: number) {\r\n        this.questionsService.getById(id).subscribe(\r\n            response => {\r\n                const question = response as any; console.log(question);\r\n                this.questionCreateForm.get('text').setValue(question.text);\r\n                this.questionCreateForm.get('image').setValue(question.image);\r\n                this.questionCreateForm.get('time').setValue(question.time);\r\n                this.questionCreateForm.get('difficulty').setValue(question.difficulty);\r\n                this.questionCreateForm.get('score').setValue(question.score);\r\n                this.questionCreateForm.get('category').setValue(question.category);\r\n                for (let index = 0; index < question.answersList.length; index++) {\r\n                    (this.questionCreateForm.get('answersList') as FormArray).push(new FormGroup({\r\n                        value: new FormControl(question.answersList[index].value),\r\n                        correct: new FormControl(question.answersList[index].correct)\r\n                    }));\r\n                }\r\n            }, error => console.log(error)\r\n        );\r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <a routerLink=\\\"/admin/questions/create\\\" class=\\\"btn btn-info btn-large\\\">Create new question</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"categories\\\">\\r\\n    <div class=\\\"row\\\" *ngFor=\\\"let category of categories\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h3 class=\\\"card-title\\\">{{category}} </h3>\\r\\n                    <form role=\\\"search\\\" class=\\\"app-search hidden-sm-down\\\">\\r\\n                        <input type=\\\"text\\\" placeholder=\\\"Search...\\\" class=\\\"form-control\\\"> <a href=\\\"\\\"><i class=\\\"fa fa-search\\\"></i></a>\\r\\n                    </form>\\r\\n                    <ngb-accordion #acc=\\\"ngbAccordion\\\">\\r\\n                        <span *ngFor=\\\"let question of questions[category]\\\">\\r\\n                            <ngb-panel [id]=\\\"question.text\\\" [title]=\\\"question.text\\\">\\r\\n                                <ng-template ngbPanelContent>\\r\\n                                    <button type=\\\"button\\\" style=\\\"margin-right:5px;\\\" class=\\\"btn btn-warning btn-sm\\\"\\r\\n                                        (click)=\\\"editQuestion(question.id)\\\">Edit</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteQuestion(question.id)\\\">Delete</button>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <div><label class=\\\"control-label\\\">Time: {{question.time}}</label></div>\\r\\n                                            <div><label class=\\\"control-label\\\">Difficulty: {{question.difficulty}}</label></div>\\r\\n                                            <div><label class=\\\"control-label\\\">Score: {{question.score}}</label></div>\\r\\n                                            <div><label class=\\\"control-label\\\">Category: {{question.category}}</label></div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\"><img [src]=\\\"question.image\\\" alt=\\\"question image\\\" style=\\\"max-height:100px\\\" /></div>\\r\\n                                    </div>\\r\\n                                    <h4>Answers</h4>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div  class=\\\"col-md-6\\\" *ngFor=\\\"let answer of question.answersList\\\">\\r\\n                                            <div [ngClass]=\\\"answer.correct ? 'text-success' : 'text-danger'\\\">{{answer.value}}</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </ngb-panel>\\r\\n                        </span>\\r\\n                    </ngb-accordion>\\r\\n                    <!-- <p>\\r\\n                    <button class=\\\"btn btn-sm btn-outline-primary\\\" (click)=\\\"acc.toggle('toggle-1')\\\">Toggle first</button>\\r\\n                    <button class=\\\"btn btn-sm btn-outline-primary\\\" (click)=\\\"acc.toggle('toggle-2')\\\">Toggle second</button>\\r\\n                </p> -->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgbPanelChangeEvent } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { QuestionsService } from \"./questions.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    templateUrl: 'questions-display.component.html'\r\n})\r\nexport class QuestionsDisplayComponent implements OnInit {\r\n    private questions: any;\r\n    private categories: any;\r\n\r\n    constructor(private questionsService: QuestionsService, private router: Router) { }\r\n\r\n    beforeChange($event: NgbPanelChangeEvent) {\r\n\r\n        if ($event.panelId === 'preventchange-2') {\r\n            console.log('if 1');\r\n            $event.preventDefault();\r\n        }\r\n\r\n        if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\r\n            console.log('if2');\r\n            $event.preventDefault();\r\n        }\r\n    }\r\n\r\n    getAll() {\r\n        this.questionsService.getAll()\r\n            .subscribe(questions => {\r\n                this.questions = questions;\r\n                this.categories = [];\r\n                for (let category in this.questions) {\r\n                    this.categories.push(category);\r\n                }\r\n            }, error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getAll();\r\n    }\r\n\r\n    editQuestion(id: number) {\r\n        this.router.navigateByUrl('/admin/questions/create/' + id);\r\n    }\r\n\r\n    deleteQuestion(id: number) {\r\n        this.questionsService.delete(id).subscribe(_ => {\r\n            this.getAll();\r\n        },\r\n            error => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    searchByText(category: string, text: string) {\r\n        const myquestions = this.questions[category];\r\n        const m = myquestions.find(q => q.text.indexOf(text) > -1);\r\n        console.log(m);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { QuestionsDisplayComponent } from './questions-display.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { QuestionsCreateComponent } from './questions-create.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        data: {\r\n            title: 'Questions - Display',\r\n            urls: [{ title: 'Dashboard', url: '/' }, { title: 'ngComponent' }, { title: 'Accordion' }]\r\n        },\r\n        component: QuestionsDisplayComponent,\r\n    },\r\n    {\r\n        path: 'create',\r\n        component: QuestionsCreateComponent\r\n    },\r\n    {\r\n        path: 'create/:id',\r\n        component: QuestionsCreateComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        CommonModule,\r\n        NgbModule.forRoot(),\r\n        RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class QuestionsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { QuestionsDisplayComponent } from './questions-display.component';\r\nimport { QuestionsRoutingModule } from './questions-routing.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { QuestionsCreateComponent } from './questions-create.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        QuestionsRoutingModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        NgbModule.forRoot(),\r\n    ],\r\n    declarations: [\r\n        QuestionsDisplayComponent,\r\n        QuestionsCreateComponent\r\n    ]\r\n})\r\nexport class QuestionsModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class QuestionsService {\r\n    apiUrl = 'https://apiitec2018tm.herokuapp.com/question/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get(this.apiUrl);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(this.apiUrl + id);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(this.apiUrl + id);\r\n    }\r\n\r\n    create(question: any) {\r\n        return this.http.post(this.apiUrl, question);\r\n    }\r\n\r\n    update(id: number, question: any) {\r\n        return this.http.put(this.apiUrl + id, question);\r\n    }\r\n}"],"sourceRoot":""}