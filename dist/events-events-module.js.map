{"version":3,"sources":["webpack:///./src/app/admin/events/events-create.component.html","webpack:///./src/app/admin/events/events-create.component.ts","webpack:///./src/app/admin/events/events-display.component.html","webpack:///./src/app/admin/events/events-display.component.ts","webpack:///./src/app/admin/events/events-routing.module.ts","webpack:///./src/app/admin/events/events.module.ts","webpack:///./src/app/admin/events/events.service.ts"],"names":[],"mappings":"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","file":"events-events-module.js","sourcesContent":["module.exports = \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h3 class=\\\"card-title\\\">\\r\\n            Create new event\\r\\n        </h3>\\r\\n        <form class=\\\"form-horizontal form-material\\\" id=\\\"eventCreateForm\\\" (submit)=\\\"saveEvent()\\\" [formGroup]=\\\"eventCreateForm\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" required=\\\"\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" required=\\\"\\\" placeholder=\\\"Description\\\" formControlName=\\\"description\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" required=\\\"\\\" placeholder=\\\"StartDate\\\" formControlName=\\\"startDate\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" required=\\\"\\\" placeholder=\\\"EndDate\\\" formControlName=\\\"endDate\\\">\\r\\n            <div class=\\\"text-center m-t-20\\\">\\r\\n                <button type=\\\"submit\\\" [disabled]=\\\"eventCreateForm.invalid\\\" class=\\\"btn btn-info btn-md btn-block text-uppercase waves-effect waves-light\\\">\\r\\n                    Save</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, EventEmitter, Output, Input } from \"@angular/core\";\r\nimport { EventsService } from \"./events.service\";\r\nimport { FormGroup, FormControl } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-events-create',\r\n    templateUrl: 'events-create.component.html'\r\n})\r\nexport class EventsCreateComponent implements OnInit {\r\n    name: any;\r\n    events: any;\r\n    eventCreateForm: FormGroup;\r\n\r\n    constructor(private eventsService: EventsService, private router: Router,\r\n        private route: ActivatedRoute) { }\r\n\r\n    ngOnInit(): void {\r\n        this.eventCreateForm = new FormGroup({\r\n            name: new FormControl(''),\r\n            description: new FormControl(''),\r\n            startDate: new FormControl(''),\r\n            endDate: new FormControl('')\r\n        });\r\n        this.name = this.route.snapshot.paramMap.get('name');\r\n        if (this.name) {\r\n            this.getEventByName(this.name);\r\n        }\r\n    }\r\n\r\n    addEvent() {\r\n        this.eventsService.create(this.eventCreateForm.value)\r\n            .subscribe(response => {\r\n                console.log(response);\r\n                this.router.navigateByUrl('/admin/events');\r\n            }, error => {\r\n                console.log(error);\r\n            }\r\n            );\r\n    }\r\n\r\n    saveEvent() {\r\n        if (this.name) {\r\n            this.updateEvent();\r\n        } else {\r\n            this.addEvent();\r\n        }\r\n    }\r\n\r\n    updateEvent() {\r\n        const formValue = this.eventCreateForm.value;\r\n        const event = { name: formValue.name, description: formValue.description, startDate: formValue.startDate, endDate: formValue.endDate };\r\n        this.eventsService.update(this.name, event)\r\n            .subscribe(response => {\r\n                console.log(response);\r\n                this.router.navigateByUrl('/admin/events');\r\n            }, error => {\r\n                console.log(error);\r\n            }\r\n            );\r\n    }\r\n\r\n    getEventByName(name: string) {\r\n        this.eventsService.getByName(name).subscribe(\r\n            response => {\r\n                this.eventCreateForm.setValue(response);\r\n            }, error => console.log(error)\r\n        );\r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <a routerLink=\\\"/admin/events/create\\\" class=\\\"btn btn-info btn-large\\\">Create new event</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\" *ngFor=\\\"let event of events\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h3 class=\\\"card-title\\\">\\r\\n          {{event.name}}\\r\\n          <div style=\\\"float:right;\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"editEvent(event.name)\\\">Edit</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteEvent(event.name)\\\">Delete</button>\\r\\n          </div>\\r\\n        </h3>\\r\\n        <h6 class=\\\"card-subtitle\\\">Description</h6>\\r\\n        <ngb-tabset>\\r\\n          <ngb-tab title=\\\"Dates\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n              <p class=\\\"p-t-20\\\">Begins: {{event.startDate}}</p>\\r\\n              <p class=\\\"p-t-20\\\">Ends: {{event.endDate}}</p>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n          <ngb-tab>\\r\\n            <ng-template ngbTabTitle><b>Leaderboard</b></ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n              <p class=\\\"p-t-20\\\">Leaderboard</p>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n          <ngb-tab title=\\\"Statistics\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n              <p class=\\\"p-t-20\\\">Statistics</p>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n        </ngb-tabset>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgbTabChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EventsService } from \"./events.service\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n    templateUrl: 'events-display.component.html'\r\n})\r\nexport class EventsDisplayComponent implements OnInit {\r\n    events: any;\r\n\r\n    constructor(private eventsService: EventsService, private router: Router) { }\r\n\r\n    public beforeChange($event: NgbTabChangeEvent) {\r\n        if ($event.nextId === 'tab-preventchange2') {\r\n            $event.preventDefault();\r\n        }\r\n    };\r\n\r\n    getAll() {\r\n        this.eventsService.getAll().subscribe(events => {\r\n            this.events = events;\r\n        },\r\n            error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    deleteEvent(name: string) {\r\n        this.eventsService.delete(name).subscribe(_ => {\r\n            this.getAll();\r\n        },\r\n            error => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    editEvent(name: string){\r\n        this.router.navigateByUrl('/admin/events/create/' + name);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getAll();\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EventsDisplayComponent } from './events-display.component';\r\nimport { EventsCreateComponent } from './events-create.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        data: {\r\n            title: 'Events - Display',\r\n            urls: [{ title: 'Dashboard', url: '/' }, { title: 'ngComponent' }, { title: 'Tabs' }]\r\n        },\r\n        component: EventsDisplayComponent,\r\n    },\r\n    {\r\n        path: 'create',\r\n        component: EventsCreateComponent\r\n    },\r\n    {\r\n        path: 'create/:name',\r\n        component: EventsCreateComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class EventsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { EventsRoutingModule } from './events-routing.module';\r\nimport { EventsDisplayComponent } from './events-display.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EventsCreateComponent } from './events-create.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        NgbModule.forRoot(),\r\n        EventsRoutingModule\r\n    ],\r\n    declarations: [\r\n        EventsDisplayComponent,\r\n        EventsCreateComponent\r\n    ]\r\n})\r\nexport class EventsModule { }\r\n","import { OnInit, Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class EventsService implements OnInit {\r\n    apiUrl = 'https://apiitec2018tm.herokuapp.com/event/';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get(this.apiUrl);\r\n    }\r\n\r\n    delete(name: string) {\r\n        return this.http.delete(this.apiUrl + name);\r\n    }\r\n\r\n    getByName(name: string) {\r\n        return this.http.get(this.apiUrl + name);\r\n    }\r\n\r\n    create(event: any) {\r\n        return this.http.post(this.apiUrl, event);\r\n    }\r\n\r\n    update(name: string, event: any) {\r\n        return this.http.put(this.apiUrl + name, event);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n}"],"sourceRoot":""}