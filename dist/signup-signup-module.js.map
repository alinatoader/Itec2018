{"version":3,"sources":["webpack:///./src/app/signup/signup-confirm.component.html","webpack:///./src/app/signup/signup-confirm.component.ts","webpack:///./src/app/signup/signup-routing.module.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/signup/signup.module.ts"],"names":[],"mappings":"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","file":"signup-signup-module.js","sourcesContent":["module.exports = \"<div *ngIf=\\\"confirmed\\\" class=\\\"success-box\\\" >\\r\\n        <div class=\\\"success-body text-center\\\">\\r\\n            <h3 class=\\\"text-uppercase\\\">Success</h3>\\r\\n            <p class=\\\"text-muted m-t-30 m-b-30\\\">You've successfully confirmed your account! You can log in now. </p>\\r\\n            <a class=\\\"btn btn-info btn-rounded waves-effect waves-light m-b-40\\\" [routerLink]=\\\"['/']\\\">Go to Login</a> </div>\\r\\n    </div>\"","import { OnInit, Component } from \"@angular/core\";\r\nimport { UserService } from \"../shared/services/user.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n    templateUrl: 'signup-confirm.component.html'\r\n})\r\nexport class SignupConfirmComponent implements OnInit {\r\n    confirmed = false;\r\n\r\n    constructor(private userService: UserService, private route: ActivatedRoute) { }\r\n\r\n    ngOnInit(): void {\r\n        const email = this.route.snapshot.paramMap.get('email');\r\n        this.userService.confirm(email)\r\n            .subscribe(response => {\r\n                this.confirmed = true;\r\n            }, error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './signup.component';\r\nimport { SignupConfirmComponent } from './signup-confirm.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: SignupComponent },\r\n  { path: 'confirm/:email', component: SignupConfirmComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SignupRoutingModule { }\r\n","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/background/login-register.jpg);\\\">\\r\\n  <div class=\\\"login-box card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form class=\\\"form-horizontal form-material\\\" id=\\\"loginform\\\" [formGroup]=\\\"registerForm\\\" (submit)=\\\"onRegister()\\\">\\r\\n        <h3 class=\\\"box-title m-b-20\\\">Sign Up</h3>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group \\\">\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Image\\\" formControlName=\\\"image\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-xs-12\\\">\\r\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        <div class=\\\"form-group \\\">\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group text-center m-t-20\\\" *ngIf=\\\"errorMessage != null\\\">\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <ngb-alert [dismissible]=\\\"false\\\">\\r\\n              <strong>Error!</strong> {{errorMessage}}\\r\\n            </ngb-alert>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group text-center p-b-20\\\">\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg btn-block btn-rounded text-uppercase waves-effect waves-light\\\"\\r\\n              [disabled]=\\\"!registerForm.valid\\\">Sign\\r\\n              Up</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group m-b-0\\\">\\r\\n          <div class=\\\"col-sm-12 text-center\\\">\\r\\n            Already have an account? <a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/']\\\"><b>Sign In</b></a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UserService } from '../shared/services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-signup',\r\n    templateUrl: './signup.component.html',\r\n    styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit, AfterViewInit {\r\n    registerForm: FormGroup;\r\n    errorMessage: string = null;\r\n\r\n    constructor(private userService: UserService, private router: Router) {\r\n        this.registerForm = new FormGroup({\r\n            email: new FormControl('', Validators.required),\r\n            password: new FormControl('', Validators.required),\r\n            confirmPassword: new FormControl('', Validators.required),\r\n            name: new FormControl('', Validators.required),\r\n            phone: new FormControl('', Validators.required),\r\n            image: new FormControl('')\r\n        });\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    onRegister() {\r\n        const user = this.registerForm.value;\r\n        if (user.password != user.confirmPassword) {\r\n            this.errorMessage = 'Password doesn\\'t match! Try again!';\r\n            return;\r\n        }\r\n        const registerUser = { name: user.name, \r\n            email: user.email, \r\n            password: user.password, \r\n            image: user.image, \r\n            phone: user.phone,\r\n            confirmUrl: 'https://quizzmee.herokuapp.com/#/signup/confirm/'  + user.email\r\n         };\r\n        this.userService.register(registerUser).toPromise()\r\n            .then(response => {\r\n                if (response == null) {\r\n                    this.errorMessage = 'This user already exists!';\r\n                } else {\r\n                    this.router.navigateByUrl('/');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        $(function () {\r\n            $(\".preloader\").fadeOut();\r\n        });\r\n        $(function () {\r\n            (<any>$('[data-toggle=\"tooltip\"]')).tooltip()\r\n        });\r\n        $('#to-recover').on(\"click\", function () {\r\n            $(\"#loginform\").slideUp();\r\n            $(\"#recoverform\").fadeIn();\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SignupRoutingModule } from './signup-routing.module';\r\nimport { SignupComponent } from './signup.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SignupConfirmComponent } from './signup-confirm.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SignupRoutingModule,\r\n    NgbModule\r\n  ],\r\n  declarations: [\r\n    SignupComponent,\r\n    SignupConfirmComponent\r\n  ]\r\n})\r\nexport class SignupModule { }\r\n"],"sourceRoot":""}